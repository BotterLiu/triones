
#include "sockutil.h"
#include "../log/comlog.h"

namespace triones
{

bool set_reuse_addr( int sockfd)
{
	int bReuseaddr = 1;
	return setsockopt(sockfd,SOL_SOCKET ,SO_REUSEADDR,(const char*)&bReuseaddr,sizeof(int));
}

int set_non_block(int sock_fd)
{
	/* O_NONBLOCK， O_RDONLY, O_WRONLY等是同一个层次上的东东*/
	int flags = fcntl(sock_fd, F_GETFL, 0);
	flags = fcntl(sock_fd, F_SETFL, flags | O_NONBLOCK);
	if(flags <0 )
	{
		OUT_ERROR(NULL,0,NULL,"set non block error,no[%d]",errno);
	}
	return flags;
}


bool set_recv_buf( int fd,int max)
{
	return ( setsockopt( fd , SOL_SOCKET, SO_RCVBUF, (char *) &max , sizeof(int) )  == 0);
}
	
bool set_send_buf( int fd,int max)
{
	return ( setsockopt( fd , SOL_SOCKET, SO_SNDBUF, (char*) &max, sizeof(int) ) == 0);
}

int get_socket_error(int sock_fd)
{
	int soError = 0;
	socklen_t soErrorLen = sizeof(soError);
	if (getsockopt(sock_fd, SOL_SOCKET, SO_ERROR, (void *) (&soError), &soErrorLen) != 0)
	{
		return errno;
	}
	if (soErrorLen != sizeof(soError))
		return EINVAL;
	return soError;
}
}


