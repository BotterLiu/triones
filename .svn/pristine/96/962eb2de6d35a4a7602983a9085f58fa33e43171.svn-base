/**
 * author: Triones
 * date  : 2014-08-21
 * desc  : tcp 套接字封装װ
 */
#ifndef _TRIONES_TCP_SOCKET_H_
#define _TRIONES_TCP_SOCKET_H_

#include "common.h"
#include "socket.h"
#include "sock_buffer.h"
#include "eventreactor.h"
#include "../pack/tprotocol.h"

namespace triones
{
class TcpSocket: public Socket
{
public:	
    virtual int send(const void *data, int len);

    virtual ASYN_CONN_RET asyn_connect(const char* _peer_ip,unsigned int _peer_port
								,IEventReactor* reactor,TransProtocol* protocol);

    //状态机处理函数
	virtual int to_close();

	virtual int to_read();

	virtual int to_write();

public:
	TcpSocket();

	virtual ~TcpSocket()
	{
		this->close_socket();
	}	

	void shutdown();	

	bool check_sockfd();	

    void close();

	void close_socket();

	int to_conn_resp();
public:

	FifoBuffer read_buffer;      //读buffer的

	triones::Mutex _mutex;
};
}
#endif /* TCP_SOCKET_H_ */
