/**
 * author: Triones
 * date  : 2014-08-21
 * desc  : epoll 事件封装
 */
#ifndef _TRIONES_EPOLL_HANDLER_H_INC
#define _TRIONES_EPOLL_HANDLER_H_INC

#include <sys/socket.h>
#include <sys/select.h>
#include <netinet/in.h>
#include "socket.h"
namespace triones
{
class EpollHandler
{
#define MAX_EPOLL_EVENT   0xffffff  //初始支持的socket数目

#define MAX_MONITOR       10240     //每次能检测的最大数目

public:
	EpollHandler(int max_event = MAX_EPOLL_EVENT);

	virtual ~EpollHandler();

	virtual bool add_event(Socket *socket, bool enableRead, bool enableWrite);

	virtual bool set_event(Socket *socket, bool enableRead, bool enableWrite);

	virtual bool remove(Socket *socket);

	virtual int dispatch(int timeout);

private:

	bool init();

private:
    bool           _inited;

    int            _max_event;

    int            _events_num;

	struct         epoll_event *_events;

	int            _epoll_fd;
};
}

#endif /* _EPOLL_HANDLER_H_INC */
